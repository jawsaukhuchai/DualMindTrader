name: 🧪 DualMindTrader CI - Pytest & Coverage

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Run Unit Tests and Coverage
    runs-on: ubuntu-latest

    steps:
      # --- Checkout code from GitHub ---
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      # --- Set up Python environment ---
      - name: 🐍 Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # --- Install dependencies ---
      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # --- Run pytest with coverage (skip benchmarks) ---
      - name: 🧪 Run pytest (skip benchmark)
        env:
          SKIP_MT5: "1"          # บอก conftest.py ให้ skip tests ที่ใช้ MetaTrader5
        run: |
          echo "⚙️ Running unit tests (excluding benchmark)..."
          pytest -m "not benchmark" --maxfail=1 --disable-warnings || true
          echo "📈 Running coverage report..."
          pytest -m "not benchmark" --cov=mind2_python --cov-report=term-missing --cov-report=xml --cov-report=html || true

      # --- Upload coverage HTML report ---
      - name: 📊 Upload coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov/

      # --- Upload XML coverage (optional for external tools like Codecov) ---
      - name: 📈 Upload coverage XML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  # Optional job for manual benchmark runs
  benchmark:
    name: Manual Benchmark (on request)
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: ⚡ Run performance benchmarks
        run: |
          pytest -m benchmark -s || true
          mkdir -p benchmarks/results
          python benchmarks/plot_benchmark_trend.py || true

      - name: 📤 Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: benchmarks/results/
